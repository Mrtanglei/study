<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">
    <!--shiro拦截器-->
    <filter>
        <filter-name>shiroFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>shiroFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- 加载Spring的配置文件到上下文中 -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:spring/spring.xml</param-value>
    </context-param>

    <!-- Spring监听器 -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <!-- spring MVC config start -->
    <servlet>
        <servlet-name>spring</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <!-- 此处指向的是spring MVC的配置文件 -->
            <param-value>classpath:spring/spring-mvc.xml</param-value>
        </init-param>
        <!-- 配置容器在启动的时候就加载这个servlet并实例化 -->
        <load-on-startup>1</load-on-startup>
    </servlet>

    <!--web.xml中配置静态资源优先过滤，这个时候服务器首先加载web.xml提前拦截静态资源请求，然后SpringMVC过滤器就拦截不到这些请求了，所以tomcat就可以正常使用静态资源-->
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>/jsp/*</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>spring</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>
    <!-- spring MVC config end -->

    <welcome-file-list>
        <welcome-file>jsp/login.html</welcome-file>
    </welcome-file-list>
</web-app>